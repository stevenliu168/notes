强烈呼吁我司在语言、设备和工具等方面拉近跟业界的距离
日期：2016-01-28 11:20浏览：8884评论：152
 

拿C++作为引子，C++11出来好多年了，目前设备的发货，还只支持C++03，其实就是C++98的小修订版本，也就是17年前的技术，最基础的软件技术10+年的落后，是什么概念呢？在最最基础的语言和编译方面的技术支持严重滞后，比如g++ 编译器版本目前最新发货还是4.3.1，之前还是4.1，但是g++的5.2版本都出来半年了，版本5.3也出来了。这带来一系列的问题：
1、严重阻碍业界优秀开源库的使用，优秀的开源库基本都得到持续的更新，不断补充功能和修正BUG，许多开源库早早都需要C++11支持。而现实情况是这些符合公司安全规范的业界优秀的开源库无法在产品中推广使用，要不只有使用不再维护的带BUG或功能弱化的老版本，这又会个后续版本切换带来很大的负担，所以最终结果就是不了了之，想用用不了。
2、严重阻碍优秀工具的推广和使用。C/C++最头痛的莫过于越界、泄露和性能，比如对于越界、泄露等的内存检测，个人认为c/c++最好的就是gcc/g++编译器自带的，在性能、简便性和准确性方面，相比IBM的套件与valgrind等工具，好得太多太多，比如对于我所在的业务，purify只能跑到10tps，而valgrind接近100 tps，但是编译器自带的可以跑到4000 tps，而purify和valgrind还常常卡顿、挂死，且误报太多，实际情况是基本不可用，在最新编译器技术面前，用垃圾来形容毫不为过，而最头痛的内存飞踩，gcc/g++ 5.2版本结合最新的intel cpu技术，也能发现，第一次听到能检测这样的内存时，几乎是不可想象的，也就是它或许就能打破c/c++在内存方面一直被诟病的魔咒。又如性能检测工具，intel的 vtune也是无人能敌，相比之下的其它工具(IBM或google)都是太弱智了，后者也是基本上性能跑不起来，而vtune基本上不影响性能和正常业务运行，想抓就抓（会多耗费一颗CPU），且数据可以呈现多个维度，同样其它工具在vtune面前，尤其是IBM的套件，用垃圾来形容也毫不为过。所以也强烈呼吁使用这些工具来替换IBM等套件。
3、严重阻碍大家使用最新的语言和编译器技术，C++11相比C++03，可以认为是一个极大的跨越，新技术、新工具和新语言库会提高开发的编码、调试和问题发现的效率，提高代码的可维护性和可复用性，比如目前版本的GDB，调试时常常挂死，其实就是GDB的BUG，要升级到新版本。

 

语言、编译器是基础，在这之上构建起一系列的生态系统。语言方面的落后，远远不是程序写出来没那么简洁优雅那么简单，更关键的是无法利用和吸收业界所构建起来的生态系统，隔离在开放世界之外，在个人世界里自己玩，极大地阻碍先进工具、先进技术的使用，而这对于效率提升的软实力支撑是必不可少的。

 

必须承认，在软件技术、工具、库等生态系统方面，我们落后业界太多太多，所以强烈呼吁打破这些技术上的枷锁，才能真真地面向业界，拥抱业界的新技术新工具。

Gcc5.2_AddressSanitizer_INTEL@MPX使用说明.docx( 632.35 KB, 217 downs )
