search key:纯虚函数可以加const修饰吗

【c++帖子】const&纯虚函数
https://blog.csdn.net/weixin_30420305/article/details/96933161

C++:95---类继承（虚函数、重写(覆盖)、动态绑定(关键字virtual、override、final)）
https://blog.csdn.net/qq_41453285/article/details/92715943

C++多态性和虚函数
https://blog.csdn.net/weixin_38285131/article/details/79617778

C++多态--虚函数virtual及override
https://blog.csdn.net/i_chaoren/article/details/77281785

C++虚函数详解
https://blog.csdn.net/weixin_43329614/article/details/89103574

C++中不能声明为虚函数的有哪些函数
https://blog.csdn.net/const_main/article/details/38875313

const修饰虚函数
https://www.cnblogs.com/Braveliu/p/3622124.html

继承中的虚函数与非虚函数
https://blog.csdn.net/a853459004/article/details/79015845

虚函数加const_为什么声明虚函数时一定要加上const
https://www.csdn.net/tags/MtjaQg3sNTgwNzItYmxvZwO0O0OO0O0O.html

search key:虚函数表存放在哪里

虚函数表存放在哪里
https://www.cnblogs.com/chenhuan001/p/6485233.html

关于C++中虚函数表存放位置的思考
https://www.cnblogs.com/laiqun/p/5887372.html

虚函数表
非继承的类
如果一个类中有虚函数，则该类就有一个虚函数表。虚函数表是属于类的，不属于类对象。在编译的时候确定，存放在只读数据段（不是代码段）。
每一个实例化的类对象都有一个虚函数表指针，指向类的虚函数表。虚函数表指针属于类对象。存放在堆上或者栈上。

继承的类
如果基类中有虚函数，派生类实现或没实现，都有虚函数表。基类的虚函数表和派生类的虚函数表不是同一个表。
如果派生类没有重写基类的虚函数，则派生类的虚函数表和基类的虚函数表的内容是一样的。
如果派生类重写了基类的虚函数，则在派生类的虚函数表中用的是派生类的函数。

多继承
含有虚函数的基类有多少个，派生类就有多少个虚函数表指针，派生类有就有多少个虚函数表。
派生类有的而基类没有的虚函数，添加在第一个虚函数表中。
虚函数表的结果是* 表示还有下一个虚函数表
虚函数表的结果是0 表示是最后一个虚函数表

重点： C++虚表
用virtual关键字修饰的函数就叫虚函数。
因为vTable(虚表)是C++利用runtime来实现多态的工具，所以我们需要借助virtual关键字将函数代码地址存入vTable来躲开静态编译期

虚表：
函数只要有virtual，我们就需要把它添加进vTable。
每个类(而不是类实例)都有自己的虚表，因此vTable就变成了vTables。
虚表存放的位置一般存放在模块的常量段中，从始至终都只有一份
基类是虚函数，在派生类中即使定义时没有加virtual也是虚函数

不可以在同一个类的内部声明同名同参的虚函数和静态函数（用类对象调用此函数时，编译器仍分不清调用的是哪个）

虚函数不可以内联
内联是编译时决定的，而虚函数是运行时动态决定执行哪段代码，所以虚函数不可能作为内联函数。虽然在虚函数前加上inline不会报错，但是会被忽略。

纯虚函数
在构造函数中调用纯虚函数，不会有虚函数的效应，只会调用父类本身的那个函数定义，如果父类没有给出函数定义，就会链接出错。构造函数不能调用纯虚函数。
